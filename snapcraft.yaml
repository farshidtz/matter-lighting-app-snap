name: chip-lighting-app
base: core22
version: "0.1"
summary: An example showing the use of Matter CHIP lighting app on the Linux.
description: |
  Matter (formerly Project CHIP) creates more connections between more objects, simplifying development for manufacturers 
  and increasing compatibility for consumers, guided by the Connectivity Standards Alliance.

  This snap is an experimental packaging of Matter linux lighting app.
architectures:
  - build-on: arm64
  - build-on: amd64

grade: devel
confinement: strict

# map wiringpi library's directory to the expected location under $SNAP  
layout:
  # /usr/local/lib:
  #   bind: $SNAP/lib
  /mnt:
    bind: $SNAP_COMMON/mnt

apps:
  # chip-lighting-gpio-app:
  #   daemon: simple
  #   command: bin/chip-lighting-app --wifi
  #   install-mode: disable
  #   restart-delay: 3s
  #   plugs:
  #     - network
  #     - bluez
  #     - avahi-observe
  test-blink:
    daemon: simple
    command: bin/test-blink
    install-mode: disable
    restart-delay: 3s
    environment:
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/lib
    
parts:
  # connectedhomeip:
  #   plugin: nil
  #   build-environment:
  #     - TAG: v1.0.0.2
  #   override-pull: |
  #     # shallow clone the project and its submodules
  #     git clone https://github.com/project-chip/connectedhomeip.git --depth=1 --branch=$TAG .
  #     scripts/checkout_submodules.py --shallow --platform linux
      
  #     # # set the snap version
  #     # craftctl set version=$TAG+snap
  wiring-pi:
    plugin: nil
    override-build: |
      git clone https://github.com/WiringPi/WiringPi.git --depth=1 .
      WIRINGPI_SUDO="" ./build
      # ls -l
      ls /usr/local/lib -l
      ls /lib
      # cp /usr/local/lib/libwiringPi.so* /lib/
      # ls /lib
      # cp ./wiringPi/libwiringPi.so* $SNAPCRAFT_PART_INSTALL
      mkdir -p $CRAFT_PART_INSTALL/lib
      cp -v /usr/local/lib/libwiringPi.so* $CRAFT_PART_INSTALL/lib/
    build-packages: [git, gcc, g++]

  test-blink:
    after: [wiring-pi]
    plugin: nil
    source: .
    override-build: |
      g++ -Wall -o test-blink test-blink.cpp -lwiringPi
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp test-blink $SNAPCRAFT_PART_INSTALL/bin
    # organize:
    #   test-blink: bin/test-blink
      


  # lighting-app:
  #   after: [wiring-pi, connectedhomeip]
  #   plugin: nil
  #   override-build: |
  #     mkdir -p $CRAFT_PART_INSTALL/bin
  #     cd ../../connectedhomeip/src

  #     # Replace storage paths:
  #     sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPLinuxStorage.h
  #     # Replace key-value store path:
  #     sed -i 's/\/tmp/\/mnt/g' src/platform/Linux/CHIPPlatformConfig.h

  #     # to avoid activation errors, don't treat unset variables as error
  #     set +u 

  #     source scripts/activate.sh
      
  #     cd examples/lighting-app/linux/
  #     gn gen out/build
  #     ninja -C out/build
  #     set -u

  #     export LD_LIBRARY_PATH=/usr/local/lib

  #     cp ./out/build/chip-lighting-app $SNAPCRAFT_PART_INSTALL/bin        
  #   build-packages:
  #     - git
  #     - gcc
  #     - g++
  #     - pkg-config
  #     - libssl-dev
  #     - libdbus-1-dev
  #     - libglib2.0-dev
  #     - libavahi-client-dev
  #     - ninja-build
  #     - python3-venv
  #     - python3-dev
  #     - python3-pip
  #     - unzip
  #     - libgirepository1.0-dev
  #     - libcairo2-dev
  #     - libreadline-dev
  #     - generate-ninja

  





